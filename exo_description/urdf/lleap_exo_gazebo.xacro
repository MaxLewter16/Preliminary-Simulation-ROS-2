<?xml version="1.0" encoding='utf-8' ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Gazebo requires the use of plugins to interact with other systems such as ROS. -->

  <!-- This plugin will publish the joint_states for the selected joints
          (which robot_state_publisher can then use to broadcast the approprate tf). -->
  <!-- This will eventually be be replaced by the ros2 control plugin for gazebo-->
  <gazebo>
    <plugin name="gazebo_ros_joint_state_publisher"
      filename="libgazebo_ros_joint_state_publisher.so">
      <update_rate>20</update_rate>
      <joint_name>left_hip_revolute_joint</joint_name>
      <joint_name>left_knee_revolute_joint</joint_name>
      <joint_name>left_ankle_revolute_joint</joint_name>
      <joint_name>right_hip_revolute_joint</joint_name>
      <joint_name>right_knee_revolute_joint</joint_name>
      <joint_name>right_ankle_revolute_joint</joint_name>
    </plugin>
  </gazebo>


  <!-- This plugin will read a JointTrajectory message from the /set_joint_trajectory topic
          and move the machine accordingly. It's a bit clunky but it works. -->
  <!-- You'll probably want to add damping to the joints to stop them it flopping around.
          e.g. <dynamics damping="10.0" friction="10.0"/> -->
  <!-- Here's an example message to publish to test it:
          ros2 topic pub -1 /set_joint_trajectory trajectory_msgs/JointTrajectory '{header: {frame_id: world}, 
          joint_names: [left_hip_revolute_joint, right_hip_revolute_joint], points: [ {positions:{0.8, 0.6}} ]}'  -->
  <gazebo>
    <plugin name="gazebo_ros_joint_pose_trajectory"
      filename="libgazebo_ros_joint_pose_trajectory.so">
      <update_rate>2</update_rate>
    </plugin>
  </gazebo>

  <!-- Adding IMU sensor plugin to the base_link -->
  <gazebo reference="base_link">
    <sensor type="imu" name="imu_sensor">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <imu>
        <angular_velocity>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </angular_velocity>
        <linear_acceleration>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </linear_acceleration>
      </imu>
      <plugin name="imu_sensor" filename="libgazebo_ros_imu_sensor.so">
        <ros>
          <namespace>imu</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
    </sensor>
  </gazebo>


</robot>